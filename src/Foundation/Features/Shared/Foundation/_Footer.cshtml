﻿@using EPiServer.SpecializedProperties;

@model IContentViewModel<IContent>

<hr class="bottom-line">
<footer class="footer">
    <div class="container">
        <h5 class="footer__introduction">
            @Html.PropertyFor(x => x.StartPage.Introduction)
        </h5>
        <div class="row">
            <div class="col-md-6 col-lg-4">
                <h3 class="footer__heading" @Html.EditAttributes(x => x.StartPage.CompanyHeader)> @Html.DisplayFor(x => x.StartPage.CompanyHeader)</h3>
                <div>Phone:&nbsp<a href="tel:@Html.DisplayFor(x => x.StartPage.CompanyPhone)" @Html.EditAttributes(x => x.StartPage.CompanyPhone)>@Html.DisplayFor(x => x.StartPage.CompanyPhone)</a></div>
                <div>Email:&nbsp<a href="mailto:@Html.DisplayFor(x => x.StartPage.CompanyEmail)" @Html.EditAttributes(x => x.StartPage.CompanyEmail)>@Html.DisplayFor(x => x.StartPage.CompanyEmail)</a></div>
                <a @Html.EditAttributes(x => x.StartPage.CompanyAddress)>@Html.DisplayFor(x => x.StartPage.CompanyAddress)</a>
            </div>
            <div class="col-md-6 col-lg-2">
                <h3 class="footer__heading" @Html.EditAttributes(x => x.StartPage.LinksHeader)> @Html.DisplayFor(x => x.StartPage.LinksHeader)</h3>

                @if (Model != null)
                {
                    <div @Html.EditAttributes(x => x.StartPage.Links)>
                        @foreach (var item in Model.StartPage.Links ?? new LinkItemCollection())
                        {
                            <a class="footer__link" href="@Url.PageUrl(item.Href)">
                                @item.Text
                            </a>
                        }
                    </div>
                }
            </div>
            <div class="col-md-6 col-lg-2">
                <h3 class="footer__heading" @Html.EditAttributes(x => x.StartPage.SocialHeader)>@Html.DisplayFor(x => x.StartPage.SocialHeader)</h3>

                @if (Model != null)
                {
                    <div @Html.EditAttributes(x => x.StartPage.SocialLinks)>
                        @foreach (var item in Model.StartPage.SocialLinks ?? new LinkItemCollection())
                        {
                            <a class="footer__link" href="@Url.PageUrl(item.Href)" target="_blank">
                                @item.Text
                            </a>
                        }
                    </div>
                }
            </div>
            <div class="col-md-6 col-lg-4">
                @Html.PropertyFor(x => x.StartPage.ContentArea)
            </div>
        </div>

        <div class="footer__subtext row no-gutters">
            <div class="col-auto">© @DateTime.Now.Year.ToString()<span>&nbsp;</span></div>
            <div class="col">
                @Html.PropertyFor(x => x.StartPage.FooterCopyrightText)
            </div>

            <!-- Multi site, multi language -->
            @if (Model.StartPage.ShowMultiSiteSwitcher || Model.StartPage.ShowMultiLanguageSwitcher)
            {

                <div class="col" style="display: flex; justify-content: flex-end;">
                    @if (Model.StartPage.ShowMultiLanguageSwitcher)
                    {
                        <div class="btn-group dropup" style="margin-right: 15px">
                            <a href="javascript:void(0);" title="Select language" class="link dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i class="fas fa-globe"></i>
                                @(Model.CurrentPageLanguages()
                                   .FirstOrDefault(x => x.Key == (Model.CurrentContent as PageData).Language.DisplayName).Key)
                            </a>
                            <div class="dropdown-menu dropdown-menu-right square-box">
                                @foreach (var l in Model.CurrentPageLanguages())
                                {
                                    <a class="dropdown-item" href="@l.Value">@l.Key</a>
                                }
                            </div>
                        </div>
                    }

                    @if (Model.StartPage.ShowMultiSiteSwitcher)
                    {
                        <div class="btn-group dropup">
                            <a title="Select site" class="link dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" href="javascript:void(0);">
                                @(Model.SiteDefinitions().FirstOrDefault(x => x.StartPage.Equals(ContentReference.StartPage)).Name)
                            </a>
                            <div class="dropdown-menu dropdown-menu-right square-box">
                                @foreach (var site in Model.SiteDefinitions())
                                {
                                    <a class="dropdown-item" href="@site.SiteUrl">@site.Name</a>
                                }
                            </div>
                        </div>
                    }

                </div>

            }

        </div>
    </div>
</footer>